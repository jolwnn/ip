package duke;

import duke.parser.Parser;
import duke.storage.Storage;
import duke.task.TaskList;
import duke.ui.Ui;

import java.io.IOException;

/**
 * Represents the main application class for Duke, which handles the initialization,
 * user interactions, and task management.
 * It connects the user interface, task storage, and command parsing components.
 */
public class Duke {
    private final Ui ui;
    private final Storage storage;
    private TaskList tasks;
    private final Parser parser;

    /**
     * Initializes the Duke application with the specified file path for task storage.
     * Sets up the user interface, storage, task list, and parser.
     *
     * @param filePath The path to the file where tasks are stored.
     */
    public Duke(String filePath) {
        ui = new Ui();
        storage = new Storage(filePath);
        try {
            tasks = new TaskList(storage.load());
        } catch (IOException e) {
            System.out.println("Error encountered while loading previous tasks.");
            tasks = new TaskList();
        }
        parser = new Parser(tasks, ui);
    }

    /**
     * Gets greeting message
     *
     * @return The greeting message from Duke.
     */
    public String getGreeting() {
        return ui.showGreeting();
    }

    /**
     * Generates a response for the user's chat message.
     *
     * @param input The user's input as a string.
     * @return The response generated by Duke.
     */
    public String getResponse(String input) {
        String response = parser.parse(input);
        try {
            storage.save(tasks.getTasks());
        } catch (IOException e) {
            response += "\n" + ui.showSaveError(e.getMessage());
        }
        return response;
    }
}



